project_name: kaml

containers:
  build-env:
    image: openjdk:8-jdk-buster@sha256:832c6e876a4d6a2fe616c84bc5e9916fe0fe07dd45ef7960017e7578295ce556
    volumes:
      - local: .
        container: /code
        options: cached
      - type: cache
        name: gradle-cache
        container: /home/container-user/.gradle
    working_directory: /code
    environment:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    run_as_current_user:
      enabled: true
      home_directory: /home/container-user

tasks:
  build:
    description: Build the library.
    run:
      container: build-env
      command: ./gradlew assemble

  check:
    description: Run the unit tests and static analysis tools.
    run:
      container: build-env
      command: ./gradlew check

  continuousCheck:
    description: Run 'check' and then re-run when any code changes are detected.
    run:
      container: build-env
      command: ./gradlew --continuous check

  spotlessApply:
    description: Fix code formatting issues identified by Spotless.
    run:
      container: build-env
      command: ./gradlew spotlessApply

  shell:
    description: Start a shell in the development environment.
    run:
      container: build-env
      command: bash

  outdated:
    description: Check for outdated dependencies.
    run:
      container: build-env
      command: ./gradlew dependencyUpdates -Drevision=release

  generateCodeCoverageReport:
    description: Generate a code coverage report based on a previous test run.
    run:
      container: build-env
      command: ./gradlew jacocoTestReport

  publishRelease:
    description: Publish the library to Sonatype's Open Source Software Repository Hosting (OSSRH), which will be synced to Maven Central.
    run:
      container: build-env
      command: ./gradlew publishRelease
      environment:
        OSSRH_USERNAME: $OSSRH_USERNAME
        OSSRH_PASSWORD: $OSSRH_PASSWORD
        GPG_KEY_ID: $GPG_KEY_ID # Run `gpg -K` to get this, take last eight characters
        GPG_KEY_RING: $GPG_KEY_RING # Run `gpg --export-secret-keys "<key user name goes here>" | base64` to get this
        GPG_KEY_PASSPHRASE: $GPG_KEY_PASSPHRASE

  publishSnapshot:
    description: Publish the library to Sonatype's Open Source Software Repository Hosting (OSSRH), which will be synced to Maven Central.
    run:
      container: build-env
      command: ./gradlew publishSnapshot
      environment:
        OSSRH_USERNAME: $OSSRH_USERNAME
        OSSRH_PASSWORD: $OSSRH_PASSWORD
        GPG_KEY_ID: $GPG_KEY_ID # Run `gpg -K` to get this, take last eight characters
        GPG_KEY_RING: $GPG_KEY_RING # Run `gpg --export-secret-keys "<key user name goes here>" | base64` to get this
        GPG_KEY_PASSPHRASE: $GPG_KEY_PASSPHRASE

  assembleRelease:
    description: Assemble the files that would be published to a repository.
    run:
      container: build-env
      command: ./gradlew assembleRelease
      environment:
        GPG_KEY_ID: $GPG_KEY_ID # Run `gpg -K` to get this, take last eight characters
        GPG_KEY_RING: $GPG_KEY_RING # Run `gpg --export-secret-keys "<key user name goes here>" | base64` to get this
        GPG_KEY_PASSPHRASE: $GPG_KEY_PASSPHRASE
